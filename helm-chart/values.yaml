# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name).
nameOverride: ""
# String to fully override enabler.fullname template.
fullnameOverride: ""
# Deploy all the components in specific K8s node(s).
enablerNodeSelector: {}
# Cilium Multi-cluster global service.
globalService: false

enableAuthIdm: false
serviceAccountName: asdo

web:
  tier: external
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: gitlab.assist-iot.eu:5050/enablers-registry/public/manageability-dashboard/frontend
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2.1.6"
    pullPolicy: IfNotPresent

  # Configuration of the service: type and ports.
  service:
    type: NodePort
    ports:
      port1:
        port: 8080
        targetPort: 8080
        containerPort: 8080
        nodePort: "83"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  envVars:
    AUTHZSERVER_HOST_NAME: "smart-authorization-authzweb.asdo"
    AUTHZSERVER_HOST_PORT: "8080"
    KONGA_HOST_NAME: "smart-openapi-konga.asdo"
    KONGA_HOST_PORT: "1337"
    PILOT_HOST: "smart-smartorchestrator-pilot.asdo"
    PILOT_PORT: "8974"
    CAR_INDEX: 'obm'
  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

webdynamic:
  tier: external
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: gitlab.assist-iot.eu:5050/enablers-registry/public/manageability-dashboard/webdynamic
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.0.6"
    pullPolicy: IfNotPresent

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
 
  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component api values.
api:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: gitlab.assist-iot.eu:5050/enablers-registry/public/manageability-dashboard/backend
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2.0.1"
    pullPolicy: IfNotPresent

  # Configuration of the service: type and ports.
  service:
    type: ClusterIP
    ports:
      port1:
        port: 8080
        targetPort: 8080
        containerPort: 8080
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000


  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}
  envVars:
    smartOrchestratorApiUrl: "http://smart-smartorchestrator-apigateway:8080"
# Component db values.
db:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: gitlab.assist-iot.eu:5050/enablers-registry/public/manageability-dashboard/db
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2.1.0"
    pullPolicy: IfNotPresent

  # Configuration of the service: type and ports.
  service:
    # type: NodePort
    type: ClusterIP
    ports:
      port1:
        port: 5432
        targetPort: 5432
        containerPort: 5432
        # nodePort: "30432"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in containers section of the component's manifest.
  # TODO: Here and in the manifest is included an example, please adapt them to the requirements of your component.
  envVars:
    POSTGRES_USER: dashboard
    POSTGRES_DB: dashboard-pui9
    POSTGRES_PASSWORD: docker

  # Component data persistence
  persistence:
    enabled: true
    existingClaim: ""
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 500Mi

  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

  catalina_ops:
    xms: 1024m
    xmx: 1024m
    debug: "-agentlib:jdwp=transport=dt_socket,address=8765,server=y,suspend=n"
    logs: /var/log

  urlExternalServices:
    KIBANA_URL: http://kibana:50000/
    PROMETHEUS_URL: http://prometheus:50000/

  AuthzServer:

  Keykloack:
    PUBLIC_KEY: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApzs96vBnfeuHMZr+eXAdjEwegrqs7LqN7SEqXmSR/oHYzkyttilqNxV5By644RQJuGM6NwH5OksJYST0tJUBNM/EBAKz+avBgbGg19VFYzbxd241C4J8mNLuXX83qLdOzJM1D6vW/HDlAuONKRgT5ygizn0/qPXqjiic5aNONcl0YNae0q65oEmyVY3avJDOEBeb+j1ak+/oJIYaW5XpGJiumhDYLVLnc7qQEHE372YDZOPA6k0yaNfkACG4ot+FA+9LMKIwQdeLUjAUaEmEI33dHuK6VAWd+0PFXRE3dCILlo4R7iBPj9/0m67oyNLL4LufuF74gzLOWvJB46sDvQIDAQAB"
    SECRET: "lnt9vlmdVBTQ4XciVeIGXZHLrbenoUrt"
    TOKEN_ENDPOINT: "http://smart-idm-keycloak:8080/auth/realms/assist-iot/protocol/openid-connect/token"
    CLIEN_ID: "assist-iot"

  Authzserver:
    URL_EVALUATE: "http://smart-authorization-authzweb:8080/authzserver/rest/evaluate"
    SECURITY_DOMAIN: "pilot3a"

